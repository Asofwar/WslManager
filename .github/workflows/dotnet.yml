name: Build WslManager App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-2019
    
    defaults:
      run:
        working-directory: src

    env:
      Solution_Name: WslManager.sln
      Test_Project_Path: WslManager.Test\WslManager.Test.csproj
      Wap_Project_Directory: WslManager.Package
      Wap_Project_Path: WslManager.Package\WslManager.Package.wapproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1

    - name: Execute unit tests
      run: dotnet test ${{ env.Test_Project_Path }}

    - name: Restore the application
      run: msbuild ${{ env.Solution_Name }} /m /t:Restore /p:Configuration=${{ matrix.configuration }}

    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $PWD -ChildPath "${{ env.Wap_Project_Directory }}/GitHubActionsWorkflow.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create the app package
      run: msbuild ${{ env.Wap_Project_Path }} /m /t:Publish /p:Configuration=${{ matrix.configuration }} /p:UapAppxPackageBuildMode=StoreUpload /p:AppxBundle=Always /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }} /p:Platform=x64 /p:AppxBundlePlatforms=x64

    - name: Remove the pfx
      run: Remove-Item -Path "${{ env.Wap_Project_Directory }}/GitHubActionsWorkflow.pfx"

    - name: Compress archive
      run: Compress-Archive -Path "${{ env.Wap_Project_Directory }}/AppPackages" -DestinationPath "${{ env.Wap_Project_Directory }}/AppPackages_${{ matrix.configuration }}.zip" -CompressionLevel Optimal

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: MSIX Bundle Package
        path: "${{ env.Wap_Project_Directory }}/AppPackages_${{ matrix.configuration }}.zip"
