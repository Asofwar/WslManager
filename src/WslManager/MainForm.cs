using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Threading;
using System.Windows.Forms;

namespace WslManager
{
    internal static class MainForm
    {
        public static readonly Dictionary<string, string> StateImages = new Dictionary<string, string>
        {
            {
                "default_distro",
                "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAt0lEQVR4Xr3ToQrCUBTH4eNNNvtcU9/AYBUfQPAtLIO9hsE4tIhRLHsELcsG41YWZnBJkFuP5whD5Qp/p+BgHC673+9ywxrMTH9/rLXNCpgv8FTGUaZfO6C4vJbR9rDpCthrxNTFYRzQIolIIh0BO+PcC+DTpSCv1aZhb6RsXmFf3lQ3vsP5OefJcsyDWf8+da3RZ5ytk9XLB4wfm1LBTh1idArCKAIwjgCMIwDjCMI48in++Xe+AVbCHNkHNb8AAAAAAElFTkSuQmCC"
            },
            {
                "hourglass",
                "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAByElEQVR4XpWTPYsiQRCGX2UjTXYxMfAXKFyisKeZIIKsH6GcYnAox4KRHHLIhcKCOGhicAyIY3CnRiIYqKihu4Emov4A01OYRAU/6O1uBhkZZNcHCnpqmuJ9q6t0hBAwdrsdwe083EFhs9kgHA7js7TbbTD0UDAYDKjVamCUy2U0Gg1N5HI5mEwmfj5DLfDYbrf3NP4HAgEym80IPWtiOBySRCLBzhPlvk6tQAbw5nA4MBgMMJ1OQYvB7/ez4Kr6/T7sdjsor+w+DaLHJX9YHzqdDvb7PQRBQCQSQTqdhsViwXw+RygUIgBEjQUFZuUvVUB8Ph+hjeLSK5UKCQaDZDwes+8XqNBDy3en0/mvWCyiWq1ivV6j1+uhVCrBarUKAH5rClzjdDrhcDioFepA+aiANBqNIqlUCtFoFGazGW63G8lkEovF4icAjQW1/6flcvmtUCggk8mA9gGMWCyGeDyObDYLWZZ/0Xtfril4ZkPi9XrBnlMFz9lsNrRaLWbjx7UCXyeTCTweD47HI5rNJvL5PLrdLusDz7P/lEcoXCwThQ9PvV6HKIqgkwcFvicul4vbkCQJCg/nAqvVity8TOptNBqNPHkr71cXCDPl8tJBAAAAAElFTkSuQmCC"
            },
        };

        public static readonly Dictionary<string, string> LogoImages = new Dictionary<string, string>
        {
            {
                "alpine",
                "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"
            },
            {
                "debian",
                "iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAA5nSURBVHhe7Z0JlB1FFYbnRUwGBBQVUAH1yGImiIogIB4VUdxlCciqoIgiyqKAgguLAQVxQz2KIGiEoKwJeFyOEIWAKIICbpkIuAEqInLczQTh+X29DG/a7pmu97rf9Azzn/OnujtvXlfdW8utW7fqDUxFDM/ZbV34rOTW+7XhGsntlEIrSRuJ4Tnz+be9Pf+8HT4KzoJbwZ/Dr8Dfwd/Af8A14TpDI0t+ShoBpWzG398+NHLZg8mjxqGRCkBwq5PsCQ+DCnw8/BqeBf8FEfjAM+Bj4a+S+7Xh1+HlcBkKGiFtDBqlAAS/Pom1/W1wPZ9VjL/Cr8GFFHzZ3JElk94yGqEABL8ByTHwzbBffbnd2CnwQlrFA+TB7m02HOG+TdoXTKoCKPQ6JO+Hh8DJGkSHocp4HtwQ3gr3Qwk/Iq0dk6YAhP8Gko/BOrqaXnEDfBWcjSL+GD2pCX1XQFLrF8KdowfNxR/gJ+Gj4akowkG+cvRNAQje5v0OuAfcxGdTBI4Hdkv7ooSboicVoi8KQPgbk3wbmvaKu+HPoHOAp0OFcwf8G9TKGYS2ssfAjaDvnAfXgr1gJTwYJZwb31aD2hWA8J9N8i34hOhBd7D5fw4upD6uGFoVZj6Sh9VIhuCL4KvhDlBFhcLWcBI8EUVUYinVqgAKboG1u50MdQMLuQQeSYGt8ZWAfD2ORCPgnfApPgvEGWTs0HkVzCNqUwCF1I+gu2BO9CAMv4cq7osIvjZzkDyaN8elE2FoF/UZeDj5i++6hJOPypEI/wIYKvz7ob6dz8Jr4ahfpw4gPCddn+BSx973oofloZvkvfFl96i8BSTdzhXQWWVZaHcvgEsVSvSkzyDfjyRRGYdGD8rBLnIv8nxxfBuOShVAIfTl/ASaloEF+DA8gUI8ED2ZRJB/k3fDj8Cysvk73Ib8/zK+DUPVXdAHYFnhO4AdhwpOboLwBfmQH+XyKFjWytHAWJS0oGBUpgAysDvJAfHdhNCsvAzeg0mpfd0ooARnwCfEd6WwNTw6vgxDJV0QwnewdUL05OhBMazp2vPW+nuiJw3F8OBuLdrAl7gMqVTzKJeTwtKoqgXsAycSvqbljmRQ063RwhdDK6OJll7am6MHE8MVu+Piy/IIVgC1fUv4iOQ2hbb0ePgh3BrBXxPfTg2Q3/+QOGEzLYMDkM1Tk+tS6KYFMBVvjQ6avHA7EvvAInwD7kBh9OFMOZDvX5B8ML6bEA7EE1XGMQhSAMLWyXXK0Mji+H72fMeQ90U3+XAddncK0biBNhDOD1bEl4VI1w12yukhCtH1IMxL9ES+Cx4cPfh/WPMVfqMWwbsF5dXKuyS+G4M7oQ4+W/g3oeU+nXLrmZ0QvQzCTlaKhH8d3GO6CF+02m2bfZ5rZE2mDMsp65+5fg/cqKzwRVcKoDbMJSla0boN7kImpnq3MwZzV12mVXR6fDcGdMutnZGJgr+K+yD/VVddEC/TltdEy8IAqW3JiAvdfQM2+yxsduOHtoGutrnA70zbWunizVXk6V7SnkC5Df5yqTLPc3oe79ifz7yS6yu5/m/8eHyUVgAD7qyhVYsf5AW+XJs+LxMu2301ua4d5MUArCPgQfBJPiuAXlYXhU4jf3aPXYN3Wr6947sxGOa75/H/uiY247qUG71UF8SXrk8naNiG8OV5wtcZ1Rc7n/y0oC3QqLjjocK3xv8AGuuzH9Qr+wL4MqhpqJVyLn93aVSe7qGnNw+b8L1rIHidc2X9SOVaAF+8L8l3+fK7uf4+16kyOqEANuczE5lrPcFCkhhV8broQbwWfCY8g3f/NnpSgOE5ms1tlbI/PJvPXx/9RwB4v+GOeZ7P5fBQvvMqPqNLwvsJUXYQvp4vVPibcu3EKw+X85m6he/a7qVQ4VvLvgw35b3HwHGFL5i/tPncNdAuazW+r5sgAVtdnnXnAlS69Hon321QwIQopQAy7EuFBc9rNdZ+F1Tqhu94BdTCOoB8vRE60AaDv3MFzAE1CPydg2tesJZWoRNPP6MxUsoKLG2GDs/Z1cSYnjws4aW3JNe1gBrlsqF+emvffN53ns97Ad9R1seThZOtLHTHGE0Xge+uVgFUfJ1MhphkYY0wvrM2IHzjeq6GLnMeRuG0aCYTjjt5CF3YD1FA1MTyup+LEUhXy3FlgPBN9Mvbp17Eu77gg4YiOHQmRAGjzSuDM5K0LuwEnWD9Gx7pgwagyMw0zD4IIQrIG3gUSrApF4gDk/Qcar8TwCZgVZJmcSwt1vlHaYQoIG+p7T6E4iyzFlAYzbrU56St3xQUBRE4RuoLK40QBWhqZlFr7DxwqdOJ1woavQsjtQFlbw3L7lUo8vdfQYUMMm1DFJCHu5K0ciAMC5muRC0bWtVbCGAJvBwaTV0GRRF/0TwgBCEKyLOAalMAcGNE6rMx2KtuOK8oO8a41yELva7BoZQhCtDzmEWdCjCCOUXtURR0HXfAsuvW2f1sWkXGs5ZeiEkRooC8WM86x4DOkPbGLO4snx11jdlQldvpH5yfBPvCQhSQN/AE+1IC0Pm+1yTppGPeqiiM8vHx3SjupQ2sTgtKLbfS6HUQ/lOS1oHO5uxkrEnI5sfFl9kIX1dEkExDPpw3+wvu8wJwX5KKDSlcV8Gv44HvHIR+d7ZGF4LP6hTcPL4bxSWtgZYLMWvRFQXJJEQBef1wnS1ABfwlvozMvi3iy0rxfGi5QjaJvwV2WoS3UDWvnTuy2K7p/qGVYeZyL2NA3sSsMtCf+v2d66p1dEM6+PbWAopvi0HNnwX34tLlzk4sYI6S9g7BXoEQBWStoCKHVJVYmqRir+HBXfPmIr3A6roovpwQxvy46tW50uXsPJp8DQ/Ot4sMttaCBowM8qyiqnEhTMM7thxotzw7qDLYymDZPvulSZpCh9xZSUsFbZc7a1VAXpyLs9Xa0G5FM1PXgFMsGJ5TvhXQZbweHpjwEFhqnbYAnS1eD7DhiC4SRaDvLxUHlEWIAjqtkhRV7HwvRKsdzYZPhan7d0eeepBTWbg7X8G5nnBzQG0fAxRnVIibu1MYBLCUoVj3Q08IqU3Hkhhz04mjyIiRw5VjePb81cgdtaptwWW6ZcgIt614b9BOlG5AmU3ctGclSCur1o7xP0VrAkEIaQF5s16bduX2eYRWe0ESBn87VABpc9dmX8x7g2acoeD7HeM+BU+DqZy09T8ODY+pBCEKyFvvdEJS6cDYgfsRgl3HILXNwc2IjHTt2TjQ2pTA9zq2aSEdHj2IYctzID6e/LgSWAlCFOAheHnoKi6nBE6GbpBbiUCMAXJS9hLoZkDh9dX830R700qD79oCqlwH2ddGD2PojXV/242w0pD7kDHAJqkQspbPBmSqFqcc7zQM8DnQ9+pncVD1/Z6CuCUU/p+72z37rau5Ce9RDu70cROGrbpzzmOr25nvThVfKUq3ADLg4JM36pfdxhmMpNAucnwHmldDv58IXwzdjSK0lIxYvhJBbr8iwEwV/I0uDrsbW5xK7RS+32u4fS3CF6GZdQDKhobQXNvbD41EGxhqBe/XHaEzzIUTZ6UfglopneXQfXE+tLXchvBG7XP+3sR1X5cfre0Gmz0TZuXg/OMIynUp5Yqf1IRQBeTtk7JfdLDsC8iDXYR709yX694Ao509FidvwcgYTY0HN1FrrSl8Y3eKyu1A6y6YT1Mm/7Z2hCrA5m7t6zTDnIpvQYZLhWNXAfLhThVPrnKC5LECnrRr1+TCjWkIbCHLoEq8gHJUZuGUQZACBIXXQtg2vhvFmWTc0277CvLiMcVODrWIaA2tc+g2PJrM/Bmj43Ylj0pz7mBZHce0aOxidKTZXRmunjfL7wu6UYDWgn1vJyzYPu2B1uJ5sV+8bxgepF9vR+OC3ZKCNo7U+Jy+dCG9ohsFuD+4aPHZcO/PQ894ix70E+RNU9UY1h2hURza7JrIzlUcB7y/ibyVPf+hdgQrYDk1rtUeuJHL8Y4nOIhC0h1MLlCIK2kOuo5ZjlV3ka9gl3GdCFaAoGBukHOrahFcqtyYwlrrZjAOQlwRndBiGE+4NvE3xZczGA9dKYCa7Q6R8U6Qdce43dQMJkC3LUA4YSlamHeCVGs083RB1wqgFegfKTqu0Y3Tte4bmy7opQUIZ6NFdv/RDNZFe4pnkKAnBdAK7GaKxgLd15Us201n9NoChGc1/DO+HANN3H1pBfHdDHLRswJoBe4R0JeeBzdW68OfQQGqaAFCj2SR1fO0JJ1BDrqaCeeBrsY1Ac/iyUYMuGToKSp1BvJOWVTVAuyKPAHdg7izcA3hzOXRUTEzyKIyBcRoOxZ4nlAWu7QG2kUH/D2sUXmtpCsyTMSFjnWjBw9BL+R2tJR+7HicMqi4BURdkSGDxtFng1X90ZyLUJBHiM0gQW39MoL2RzndupmFZquu6plJGqi8BaRAwK4XGNOZhZucQ34mZFqjNgUkcP0475CNk2ghHsL0sEftpiGCVsmeKfTW6MFDMIxFj+mttJa+hbQ0DX2xzRMlOB7kha64aP5clFDnpu/Gou4uKALCdeHGQdlTD7MhjK4dLEVJlUU5TyX0fXaKoF0rdoDO/pajoSOOGYtQWKMiF+pEX1pAJxCugVPG7WRPWnHipnK62uw2VdF3BQiU4BnPxv0b598Jn/mbXIYXPizQ9y6oEwja9/tD/v60eefGD0Ne/F2us+F603mAnlQFpEARRq+5puA+sM48+cOensh7Pkro3C88bdAIBaRAES8k0aXtIRqd0G2xJ0oIPpOt6WiUAkTSLbmDxZ+KdfNFmkeVoCnrbwzXvhunX2icAjqBMtyz5VHz/mhEemad50Z7muIN00ERjVZAChTh9iM3YXiIq2c0eLyk44O/ZuECkGsMujS6PQ190jAlFJAFCvF34HXmmTp/cMO2SvIQwR/D61BGX7cadYeBgf8BG/QtHWpEOf4AAAAASUVORK5CYII="
            },
            {
                "docker",
                ""
            },
            {
                "fedora",
                "iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABAVSURBVHhe7Z0JdFTVGce/ycxk3yBsIQkJyDYgUCiLCGLBugEeFKHW1gXrcTttXQC7agtqPYoFXE5PVU5PhSKcUxFckFoQQYqI7AgkkLBKWA3Zt5lJMv3+d14CIe/Nu2/mTeYZ8vN85937UEy+797v3u/e795nI4vimvCUjXy2LC4OYOnL0oMlk6UTSypLHEs0C/Cw1LCUshSxnGQ5wXKY5QBLYd6GBT5+Wg7LGMA1fqaDH8NZJrCMYRnB0pnFDM6z7GD5kmW9jWw7czfMr8MfRJqIGoCVjhZ8M8s0loksaN2tAXrJGpYVLP/l3oEeFBFa3wDTp5OrKGsglx5iuYclDa8jCIyxjOUtNkSueNOKtJoBXBNmsk+nG7j4G5Yfs1ht/GlgWcfyV/7R1udtmN8qY0arKIFdDfz6CyyjxQvrs4XlWe4Rn/ur4SOsBmDF9+fHfBb49+8jGCdmsiEO+avmExYDsOJj+fFHlqdZYvDue4ybZR7Li2yIWvHGREw3ACsfU8nFLJi/tyUwQN/PRsB01jRMM4Br/KwoIt9sLsLXO8XLtgemq89wHDGf4wgM2iFjigG41SfzYwnLFPGi7fMhy33cG8r91eAJ2QCs/F78+IgFc3tLkpQYR317daes7mnUqUMSxcVF8y9uo+paN52/UEFHvz1P+UfPkMcNdy8NljhuYyMc81eDIyQDsPKH8QMzha7ihUWw2Ww0qH8Puun6ITR2RD/qk9NVvAtEraeetu07ScvX7KIt23PJW1XKHlU3FDjLMomNsMtfNU7QBmDlj+XHapYU8cICOJ0OmnLTcLr3znFC6cGy5uuT9PLS7VR57iTVFp8iX0O98ieqlLFMZiNs9leNEZQBFOWj5SeJFxbgxnFDaPYjkykrvaPyJjQ+2XqSXlr+DTXUeaj63FFyF59W/kSVCpaJwRjBsAFY+T/kx3oWS7T8jqmJNHfWT+iGMeYPQY8u3EIHjpeIMlxSZWEuNXg0QwH0hAlG3ZFdeUrByu/JD4TnkV5AE1zNfv6f8x+jwf2xbWA+5dUe2nEIa3WsqOhYiu3QjepqKtkI2HpoAYLPKZ17jl5ZdPwr7EtIwXN3OVj5mGp+zGKJAXfcqAG0eMFj1K1z+DpiamLjfo8fm91JyTlDKIYNoQH+4GNFV1JIGYD/Qvx7mOdbYqp53UgXvf7cDIqLba4gszlbrNLSeTaVmDkgkBGgoyX9/TrTRbYHzGKxRJA1oE8mLZxzH0U7DXlPwzTwFPSLvZhlqpOY4SJnouaAP4UHV+hMF10DKIPuX/y1yJKcFE+vzZ1B8WFu+eC9jcfo6BlMbjTgnpDUYyBFOeH6VXlB0V1AAhqA/wL87XA9lljbefaJqZTRrYNSCw9VtXX05kcH6W8f5ilvtMGYkJjlUmotQCtZrOhQk4DTUP6Pn+fHM/5aZBk7oj+99fJDQQUulVW1tP7L/bR1VwHlHztDxSU8k2EXgzGkc1oKpad3oYS0dCp1O2g/TzsRFRuhsjCP3CVnlFoLnuep6Z+Ucgs0fx9Wfj9+7GWJ+Hp+VJSNVi2aTX16ag58qlRVu+ntdz+jZR9+Kcp6RCelUXx6b7LHJChv5Gjwuqk0f6tWxIz/8RA2guqmTiAXhJ0sS2ymIMo1qvw9uSdoyoOv0KLln0spH3gqLlBZwXaqvXBKeSNHlDOGZ0XpSq0F0CF0qYqqAbj1Yw93kr8Wee6dep1SkuOLrbn0wMy/0+lz/ijWCD5fA1WdPiSWH4wQ2wnBoKZDmcQ6Ha+Um9HCAK7xT+Fvge+3BDmZXWjowBylps/+QyfpqblLyO3xKm+Co+b8cbEQJ4s9Oo6cCQGDQsyKWlhIpQfY0Pqv9Zcjz43jBmHGJ0Wt20tPv7BUPM2g+nQB1burlZo+0ckBE/mgU+i2GWouCHk7luHa4ZgLyLFkxSY6ccq/dmMGcEfVZ5FeKoczSXclFkkKzWhmAO4i2EhH0pQlcNjtNKif3EKb11tPS97fpNTMw1NeJN0LMHuy2ZHiqsmNrONmgcPlPeBhFrVeEREyu/O0ME4u6t2yK5+KSyuVmrl4ys4pJX0csYlKSRXoFjpuoknZbBn8pj/316xBZjf5zZVtu+VdhVG8lfKzqSgejHW4R9G14NLWfhNLa2UnS9GxQ8DW1IzDJ+RbqVGMDMRRDt1VG+gYuhZcagCkiFsKI8vNpWXhcT+gob5OZoPej01qlbZJ18IA3CUwclguf1Mvk+FS6uvDl8wsfgr5H0WGia4JQudNPQDLpmadRmlz2IRbkbOAr0Hq4E1n8hFSepoM0CJAaOci9sAzm2b46qQP2widNxoAZ7La0cCZKL8HUa++Ya8GUnsoyjV+FvrWSFTaUYHHoZgUyTwEHqjra6uUii4jXBOetHEP8OHoZ7v/1yAmNV0sN8tQV1upl0V3KV3IF5UBF9TW8vhNA1uO8d2QeyyHt+KCUpJmIAyAQ9DtXA7ST7IGcGAlH4t4ynAc2RB9YIBsf7mdJqD8DJfYopSlrqZCuCCD5MAAGf5yOwAtXif7TZXaItyOYJjuMECbGIBlV021sEXZKa5TD0rtOypQwpUq9e4qchtYMb2ELjbX+Jk4dKabQBQKtiiHWCe3RUWJ5YWOSTEUHxtw3Vww6YZh9Mv7blRqgdn5zVGa+9pKKq/UPsjo42liVY2X3F7/8S4bt3Z7TLyY52M3C0YIhvLje4MZgMEOGACn/zSzi4xi45mtIzGVnAkdyRGfTI5YbFI4RWrJ1LHZNP1HPal7Wrzyb7c+WDNC7s87nxbQjvzQd8/cpWep8mTQNxzkwQAFXOjtrwcPwvXYtAwRtFy+KxTFrX7O/UNp/FDN1I1WB73htZW59P6m48ob4yDqLTu8nXxYLQ2OwxgDIEFj5xaelD2YUvuMpNiOGS2UD6Zel20p5QO4wl/fMYD6ZQWX3g6lV5zYF4ryBUErH64mvttVlNp7JPtP7X0crHPA7VgRO7vF6dcb/9kQ7Vac+IbqjU87L8cblAGQA5PcezjFdeYQgltSIFISoyk9gj5fj4E5uHxLHtHyMejiFGXoVBk2gCMhlVJY+Tqbz02glZm7l2EuToe8CrA1WXZkp1nKB2WGDIDpGoIUzGpkKanwUHGFoQPQrcqxQGcALqG2+LQYcDHnN5Hz0gZwxCWJwdboXBlp4DjyaVVW6/xsddXlVHZ0J1WdOmhkpVOW01IGQHgejPIbWbL2MB381rRuaxrrdp6iTWrHkLjReCuKRYBVdmQH1VXhBGpYOG7v3HP0E1wIuOWT1ONq0QOCpY6Dn893n6HkhGjqlZ4kxoVIUuOup6WfHaE3VuVyD/W/89V52beXUO2FQpEdjcRcjeOoZvI6ArEjXNBc9Ebee2Jm8IFyXU25aEH1nmoxg0iKc1LfzGSKC7AUAfPgxPuvZtwsnZryxjtr6dTZYqWmDoKv0ko3R8KlVF3j5XqD2MNFQIVDFhEgK6AB4HJS+402tCYOfA0N3IIKRWsKcLJcl8d/cQs9eo/cWtC0R1+l3HzrjjUqYPOgW8AxIDYt07Dy0drLCr6m6jOHQ1I+OF8U8nU8VmZ73oYFPm0DcKTrP/Uhj7vkLJUd22UkM+BKRlzsoWkALC8Y3Y7DaUHMINqRQlyJqWmAmJQuSkkftHihfGpXviTfsYhbVdQNYLPJnPZooup0fjiClLbMGvb/YhlV1QBY58EulgyIFIPcDbqSeU95ahjAQNDlLgl4k1Q7LYH7WesvahggKkZ++djDIXs7hniX3U/TMU51AzjkUvFwn1qD1/TbfNsyyAZ421/0o2oAm11u0Q0GaMcQ67j1N7uGRd0AslsoDabc3qsJMilkwTrP9wBcAt4MVQNgkUoGnTOxIYMbb2Vxm3Q6Poxw5GvboJSbUDdAndwvI26LQoZ7mMjJkE/aKy2XP8kYIZ5V+yqHqvbqJQdWZLqFsk+gx7BBchkL1TUeNoCpW4Vms5p9/0al3Ax1AxjY94xOCU9q6YC+meKybRlw+XZDmMejEMBGg+YFfqoGQHQrS2yHdOmo2Qj33Sl/R9DePHyzzbLM49afr5RboGoA7A7Jng5HhkRcF3OPGAzk1o/EXFlwF5xFwRX3L/qL6miOoJ5yRMxyIK3bEW/ODbYJcTH00u9/RnYeX2SA/9+yU7OBRRIESfjIQ8ABVfO3RNavNDYbJWUPEqneoRAT7aCFc+6nq7Llb0det3kf1dRYMu/oD6x83Yu8NQ2A45bIEpBFnCzpNSzonoAvWyya94j44IIRln2Az0NajlUsC/zFwATs57g3zQgwQgobIb5rLx6Y5ZYz7PYomnrrSPrgH7Np+GD5E4lgy84C2me9AXg/ywxu/VKhuW5aSnLODwxtzjSSGmejaHcRlZ4/Q0XfXSBv3cUNG7iaPj3TadwoF91+83DKTDd+G349Tzvveuw1yi0oVN5YAtzeei0rX7rl6hoAfj2l90gRdOmBROlJ12TR3ROuoh5dLl5+CuWXV1ST21NH0U4HpSbHk8MRXJZdI0tXbaYX30BPtwxI/cMHHHb7q3LoahXTUdmL62ZOu5p++9PBzZQPnKzsNPbx3bt2oE4dk0JW/pET52nhok+UmiVAhi8+5mNI+UC/WTNIsNKbFV3j6ky3jw3/keOKqlp6cs5iqqm1zFI4Wv4trHx8ANQwUgYAVYUHA86KJo4Kz2dELgUu7Ik/L+YeYGCKHF7g8+F2glI+0B0DLgUzm6ScIeRMaHmqZPHvxonE23CBy1if4Jb/v6/1r5VvJTDbwYfcxIA79vHV+DI4vpcMfWIxbTnLZJZNm1+frNly0QOkF9LF2ahje9gdtTyU7PaGLy2lqKSCHpj9ppWUv5JlTKPyBT6x0e7jfxbx8zYWKB/LELr3WBo64o3NmsqTB5RcoIsrkI1fGzKbrbsP0/RHFtLeA8EfJzURDDyzWMnTWPnNViw3vzEZ834fP6EUrI08wqIbJcIAe/xFY2BgLju8jbyV/qyIf288RhfKzVsSKCmroj8vWEEPcss/VxS2AxJGgMsZzYpfkLdRM8hqHAu2suDDF++wBDxKiTEAvutTfzU4cLdCXJccurp/Ns17eAR1TA7+swPFrPhlq76kf63cRBWVlkjyRat6mQUfdDZ90QkGwGL+QZarxJsQwGn5blnZ9Ohd19KtY3pTfIzcPkE1Tym/2llA/9m4h9Zv3mel/V18KxOfNA/berdIO2Aj4MripSibRWx8Ag129aBBfTMoOyNNBGJYgsChvUpu2fiM7IlT34mlhNz8QvJ6QztxbjJIHcdH/VW3Ec1EMQAu7vO9z8U7UL9CweCJmcwr7OA3HJRcTAuVpsQb7gWYxK9jGSVeXDlg5wm9/21u8XDFrUqTAYBiBHyQv633BJzPwud4V3AzX8utPWKDTjMDANeEmTae597NxedYQh6YLQIUvo0Fvh0nU3Zza7fEoNPCAI0osyNcr4tLvYeyYJ8wvKlwwQFfjRaMLAKE/HApyJlH5IaAKM9nayg8+PmrreLTjUH0f8xGNv34OSACAAAAAElFTkSuQmCC"
            },
            {
                "kali",
                "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"
            },
            {
                "linux",
                ""
            },
            {
                "opensuse",
                "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"
            },
            {
                "pengwin",
                "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"
            },
            {
                "ubuntu",
                "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"
            },
        };

        public static Form Create()
        {
            var mainForm = new Form()
            {
                ClientSize = new Size(640, 480),
                Text = "WSL Manager",
                StartPosition = FormStartPosition.WindowsDefaultBounds,
            };

            var components = new Container();

            var layout = new ToolStripContainer()
            {
                Parent = mainForm,
                Dock = DockStyle.Fill,
            };

            var largeImageList = new ImageList()
            {
                ColorDepth = ColorDepth.Depth32Bit,
                ImageSize = new Size(96, 96),
            };
            components.Add(largeImageList);

            var smallImageList = new ImageList()
            {
                ColorDepth = ColorDepth.Depth32Bit,
                ImageSize = new Size(32, 32),
            };
            components.Add(smallImageList);

            foreach (KeyValuePair<string, string> pairs in LogoImages)
            {
                using var memStream = new MemoryStream(Convert.FromBase64String(pairs.Value), false);
                var loadedImage = Image.FromStream(memStream, true);
                largeImageList.Images.Add(pairs.Key, loadedImage);
                var smallImage = ResizeImage(loadedImage, smallImageList.ImageSize.Width, smallImageList.ImageSize.Height);
                smallImageList.Images.Add(pairs.Key, smallImage);
            }

            var stateImageList = new ImageList()
            {
                ColorDepth = ColorDepth.Depth32Bit,
                ImageSize = new Size(16, 16),
            };
            components.Add(stateImageList);

            foreach (KeyValuePair<string, string> pairs in StateImages)
            {
                using var memStream = new MemoryStream(Convert.FromBase64String(pairs.Value), false);
                var loadedImage = Image.FromStream(memStream, true);
                stateImageList.Images.Add(pairs.Key, loadedImage);
            }

            var listView = new ListView()
            {
                Parent = layout.ContentPanel,
                Dock = DockStyle.Fill,
                View = View.Details,
                MultiSelect = false,
                Sorting = SortOrder.None,
                FullRowSelect = true,
                LargeImageList = largeImageList,
                SmallImageList = smallImageList,
                StateImageList = stateImageList,
            };

            listView.Columns.Add(string.Empty, "Distro Name", 200);
            listView.Columns.Add("status", "Distro Status", 120);
            listView.Columns.Add("wslver", "WSL Version", 120);
            listView.Columns.Add("default", "Is Default", 120);

            var statusStrip = new StatusStrip()
            {
                Parent = layout.BottomToolStripPanel,
                Dock = DockStyle.Fill,
            };

            var statusItem = new ToolStripStatusLabel()
            {
                Spring = true,
                Text = "Ready",
                TextAlign = ContentAlignment.MiddleLeft,
            };

            statusStrip.Items.Add(statusItem);

            var backupWorker = new BackgroundWorker()
            {
                WorkerReportsProgress = true,
                WorkerSupportsCancellation = true,
            };
            components.Add(backupWorker);

            backupWorker.DoWork += new DoWorkEventHandler((s, e) =>
            {
                var request = (DistroBackupRequest)e.Argument;
                var process = WslHelper.CreateExportDistroProcess(request.DistroName, request.SaveFilePath);
                process.Start();

                var list = WslHelper.GetDistroList();
                var convertingItem = list.DistroList.Where(x => string.Equals(x.DistroName, request.DistroName, StringComparison.Ordinal)).FirstOrDefault();
                backupWorker.ReportProgress(0, convertingItem);

                while (!process.HasExited && !backupWorker.CancellationPending)
                {
                    list = WslHelper.GetDistroList();
                    convertingItem = list.DistroList.Where(x => string.Equals(x.DistroName, request.DistroName, StringComparison.Ordinal)).FirstOrDefault();
                    backupWorker.ReportProgress(50, convertingItem);
                    Thread.Sleep(TimeSpan.FromSeconds(1d));
                }

                list = WslHelper.GetDistroList();
                convertingItem = list.DistroList.Where(x => string.Equals(x.DistroName, request.DistroName, StringComparison.Ordinal)).FirstOrDefault();
                backupWorker.ReportProgress(100, convertingItem);
                request.Succeed = true;
                e.Result = request;
            });

            backupWorker.ProgressChanged += new ProgressChangedEventHandler((s, e) =>
            {
                if (mainForm.IsDisposed)
                    return;

                var targetItem = (DistroInfo)e.UserState;

                foreach (ListViewItem eachItem in listView.Items)
                {
                    var boundItem = (DistroInfo)eachItem.Tag;

                    if (!string.Equals(boundItem.DistroName, targetItem.DistroName))
                        continue;

                    eachItem.SubItems["status"].Text = targetItem.DistroStatus;
                    break;
                }
            });

            backupWorker.RunWorkerCompleted += new RunWorkerCompletedEventHandler((s, e) =>
            {
                if (mainForm.IsDisposed)
                    return;

                if (e.Error != null)
                {
                    MessageBox.Show(mainForm,
                        "Unexpected error occurred. " + e.Error.Message,
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                if (e.Cancelled)
                {
                    MessageBox.Show(mainForm,
                        "User cancelled the task",
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                var result = e.Result as DistroBackupRequest;

                if (result == null)
                {
                    MessageBox.Show(mainForm,
                        "Cannot obtain task result. It seems like a bug.",
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                if (result.Succeed)
                {
                    RefreshListView(listView, statusItem, WslHelper.GetDistroList());
                    var itemPath = result.SaveFilePath.Replace(@"/", @"\");
                    Process.Start("explorer.exe", "/select," + itemPath);
                }
                else
                {
                    MessageBox.Show(mainForm,
                        "Task does not succeed.",
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            });

            var restoreWorker = new BackgroundWorker()
            {
                WorkerReportsProgress = true,
                WorkerSupportsCancellation = true,
            };
            components.Add(restoreWorker);

            restoreWorker.DoWork += new DoWorkEventHandler((s, e) =>
            {
                var request = (DistroRestoreRequest)e.Argument;
                var process = WslHelper.CreateImportDistroProcess(request.DistroName, request.RestoreDirPath, request.TarFilePath);
                process.Start();

                var list = WslHelper.GetDistroList();
                var installingItem = list.DistroList.Where(x => string.Equals(x.DistroName, request.DistroName, StringComparison.Ordinal)).FirstOrDefault();

                if (installingItem == null)
                    installingItem = new DistroInfo() { DistroName = request.DistroName, DistroStatus = "Installing", IsDefault = false, WSLVersion = "?" };

                restoreWorker.ReportProgress(0, installingItem);

                while (!process.HasExited && !restoreWorker.CancellationPending)
                {
                    list = WslHelper.GetDistroList();
                    installingItem = list.DistroList.Where(x => string.Equals(x.DistroName, request.DistroName, StringComparison.Ordinal)).FirstOrDefault();
                    restoreWorker.ReportProgress(50, installingItem);
                    Thread.Sleep(TimeSpan.FromSeconds(1d));
                }

                list = WslHelper.GetDistroList();
                installingItem = list.DistroList.Where(x => string.Equals(x.DistroName, request.DistroName, StringComparison.Ordinal)).FirstOrDefault();

                if (request.SetAsDefault)
                {
                    process = WslHelper.CreateSetAsDefaultProcess(request.DistroName);
                    process.Start();
                    process.WaitForExit();
                }

                restoreWorker.ReportProgress(100, installingItem);
                request.Succeed = true;
                e.Result = request;
            });

            restoreWorker.ProgressChanged += new ProgressChangedEventHandler((s, e) =>
            {
                if (mainForm.IsDisposed)
                    return;

                var targetItem = (DistroInfo)e.UserState;

                if (targetItem == null)
                    return;

                var found = false;

                foreach (ListViewItem eachItem in listView.Items)
                {
                    var boundItem = (DistroInfo)eachItem.Tag;

                    if (!string.Equals(boundItem.DistroName, targetItem.DistroName))
                        continue;

                    eachItem.SubItems["status"].Text = targetItem.DistroStatus;
                    found = true;
                    break;
                }

                if (!found)
                    AddDistroInfoIntoListView(listView, targetItem);
            });

            restoreWorker.RunWorkerCompleted += new RunWorkerCompletedEventHandler((s, e) =>
            {
                if (mainForm.IsDisposed)
                    return;

                if (e.Error != null)
                {
                    MessageBox.Show(mainForm,
                        "Unexpected error occurred. " + e.Error.Message,
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                if (e.Cancelled)
                {
                    MessageBox.Show(mainForm,
                        "User cancelled the task",
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                var result = e.Result as DistroRestoreRequest;

                if (result == null)
                {
                    MessageBox.Show(mainForm,
                        "Cannot obtain task result. It seems like a bug.",
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                if (result.Succeed)
                {
                    RefreshListView(listView, statusItem, WslHelper.GetDistroList());
                    var process = WslHelper.CreateLaunchSpecificDistroProcess(result.DistroName);
                    process.Start();
                }
                else
                {
                    MessageBox.Show(mainForm,
                        "Task does not succeed.",
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            });

            var menuStrip = new MenuStrip()
            {
                Parent = layout.TopToolStripPanel,
                Dock = DockStyle.Fill,
            };

            var appMenu = menuStrip.Items.AddMenuItem("&App");

            var aboutMenuItem = appMenu.DropDownItems.AddMenuItem("&About...");

            aboutMenuItem.Click += new EventHandler((s, e) =>
            {
                var message = string.Join(Environment.NewLine,
                    "WSL Manager v0.1",
                    "(c) 2019 rkttu.com, All rights reserved.");
                
                MessageBox.Show(mainForm, message, mainForm.Text,
                    MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1);
            });

            appMenu.DropDownItems.AddSeparator();

            var exitMenuItem = appMenu.DropDownItems.AddMenuItem("E&xit");

            exitMenuItem.Click += new EventHandler((s, e) =>
            {
                mainForm.Close();
            });

            var pointContextMenuStrip = new ContextMenuStrip();

            var openDistroContextMenuItem = pointContextMenuStrip.Items.AddMenuItem("&Open Distro...");

            openDistroContextMenuItem.Click += new EventHandler((s, e) =>
            {
                var hitTest = pointContextMenuStrip.Tag as ListViewHitTestInfo;
                var targetItem = hitTest?.Item?.Tag as DistroInfo;

                if (targetItem == null)
                    return;

                var process = WslHelper.CreateLaunchSpecificDistroProcess(targetItem.DistroName);
                var result = process.Start();
            });

            pointContextMenuStrip.Items.AddSeparator();

            var openDistroFolderContextMenuItem = pointContextMenuStrip.Items.AddMenuItem("E&xplore Distro File System...");

            openDistroFolderContextMenuItem.Click += new EventHandler((s, e) =>
            {
                var hitTest = pointContextMenuStrip.Tag as ListViewHitTestInfo;
                var targetItem = hitTest?.Item?.Tag as DistroInfo;

                if (targetItem == null)
                    return;

                var process = WslHelper.CreateLaunchSpecificDistroExplorerProcess(targetItem.DistroName);
                var result = process.Start();
            });

            var backupDistroContextMenuItem = pointContextMenuStrip.Items.AddMenuItem("&Backup Distro...");

            backupDistroContextMenuItem.Click += new EventHandler((s, e) =>
            {
                if (backupWorker.IsBusy)
                {
                    MessageBox.Show(
                        mainForm, "Already one or more backup in progress. Please try again later.",
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Stop);

                    return;
                }

                var hitTest = pointContextMenuStrip.Tag as ListViewHitTestInfo;
                var targetItem = hitTest?.Item?.Tag as DistroInfo;

                if (targetItem == null)
                    return;

                using var saveFileDialog = new SaveFileDialog()
                {
                    Title = $"Backup {targetItem.DistroName}",
                    SupportMultiDottedExtensions = true,
                    Filter = "Tape Archive File|*.tar",
                    DefaultExt = ".tar",
                    FileName = $"backup-{targetItem.DistroName.ToLowerInvariant()}-{DateTime.Now:yyyy-MM-dd-HH-mm-ss}.tar",
                };

                if (saveFileDialog.ShowDialog(mainForm) != DialogResult.OK)
                    return;

                backupWorker.RunWorkerAsync(new DistroBackupRequest()
                {
                    DistroName = targetItem.DistroName,
                    SaveFilePath = saveFileDialog.FileName,
                });
            });

            var unregisterDistroContextMenuItem = pointContextMenuStrip.Items.AddMenuItem("&Unregister Distro...");

            unregisterDistroContextMenuItem.Click += new EventHandler((s, e) =>
            {
                var hitTest = pointContextMenuStrip.Tag as ListViewHitTestInfo;
                var targetItem = hitTest?.Item?.Tag as DistroInfo;

                if (targetItem == null)
                    return;

                if (MessageBox.Show(mainForm, $"Really unregister `{targetItem.DistroName}` distro? This cannot be undone.",
                    mainForm.Text, MessageBoxButtons.YesNo, MessageBoxIcon.Warning,
                    MessageBoxDefaultButton.Button2) != DialogResult.Yes)
                    return;

                var process = WslHelper.CreateUnregisterDistroProcess(targetItem.DistroName);
                process.Start();
                process.WaitForExit();
                RefreshListView(listView, statusItem, WslHelper.GetDistroList());
            });

            pointContextMenuStrip.Items.AddSeparator();

            var setAsDefaultDistroContextMenuItem = pointContextMenuStrip.Items.AddMenuItem("Set as &default distro");

            setAsDefaultDistroContextMenuItem.Click += new EventHandler((s, e) =>
            {
                var hitTest = pointContextMenuStrip.Tag as ListViewHitTestInfo;
                var targetItem = hitTest?.Item?.Tag as DistroInfo;

                if (targetItem == null)
                    return;

                var process = WslHelper.CreateSetAsDefaultProcess(targetItem.DistroName);
                process.Start();
                process.WaitForExit();
                RefreshListView(listView, statusItem, WslHelper.GetDistroList());
            });

            var defaultContextMenuStrip = new ContextMenuStrip();

            var viewTypeContextMenuItem = defaultContextMenuStrip.Items.AddMenuItem("&View");

            var largeIconViewTypeContextMenuItem = viewTypeContextMenuItem.DropDownItems.AddMenuItem("&Large Icon");

            largeIconViewTypeContextMenuItem.Click += new EventHandler((s, e) =>
            {
                listView.View = View.LargeIcon;
            });

            var smallIconViewTypeContextMenuItem = viewTypeContextMenuItem.DropDownItems.AddMenuItem("&Small Icon");

            smallIconViewTypeContextMenuItem.Click += new EventHandler((s, e) =>
            {
                listView.View = View.SmallIcon;
            });

            var listViewTypeContextMenuItem = viewTypeContextMenuItem.DropDownItems.AddMenuItem("&List");

            listViewTypeContextMenuItem.Click += new EventHandler((s, e) =>
            {
                listView.View = View.List;
            });

            var detailViewTypeContextMenuItem = viewTypeContextMenuItem.DropDownItems.AddMenuItem("&Detail");

            detailViewTypeContextMenuItem.Click += new EventHandler((s, e) =>
            {
                listView.View = View.Details;
            });

            var tileViewTypeContextMenuItem = viewTypeContextMenuItem.DropDownItems.AddMenuItem("&Tile");

            tileViewTypeContextMenuItem.Click += new EventHandler((s, e) =>
            {
                listView.View = View.Tile;
            });

            var refreshListContextMenuItem = defaultContextMenuStrip.Items.AddMenuItem("Refresh &List");

            refreshListContextMenuItem.Click += new EventHandler((s, e) =>
            {
                RefreshListView(listView, statusItem, WslHelper.GetDistroList());
            });

            viewTypeContextMenuItem.DropDownOpened += new EventHandler((s, e) =>
            {
                foreach (ToolStripMenuItem eachSubItem in viewTypeContextMenuItem.DropDownItems)
                    eachSubItem.Checked = false;

                switch (listView.View)
                {
                    case View.LargeIcon:
                        largeIconViewTypeContextMenuItem.Checked = true;
                        break;

                    case View.SmallIcon:
                        smallIconViewTypeContextMenuItem.Checked = true;
                        break;

                    case View.List:
                        listViewTypeContextMenuItem.Checked = true;
                        break;

                    case View.Details:
                        detailViewTypeContextMenuItem.Checked = true;
                        break;

                    case View.Tile:
                        tileViewTypeContextMenuItem.Checked = true;
                        break;
                }
            });

            defaultContextMenuStrip.Items.AddSeparator();

            var restoreDistroContextMenuItem = defaultContextMenuStrip.Items.AddMenuItem("&Restore Distro...");

            restoreDistroContextMenuItem.Click += new EventHandler((s, e) =>
            {
                if (restoreWorker.IsBusy)
                {
                    MessageBox.Show(
                        mainForm, "Already one or more restore in progress. Please try again later.",
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Stop);

                    return;
                }

                using var dialog = RestoreForm.Create();

                if (dialog.ShowDialog(mainForm) != DialogResult.OK)
                    return;

                var restoreRequest = dialog.Tag as DistroRestoreRequest;

                if (restoreRequest == null)
                    return;

                restoreWorker.RunWorkerAsync(restoreRequest);
            });

            defaultContextMenuStrip.Items.AddSeparator();

            var shutdownContextMenuItem = defaultContextMenuStrip.Items.AddMenuItem("&Shutdown WSL...");

            shutdownContextMenuItem.Click += new EventHandler((s, e) =>
            {
                if (MessageBox.Show(mainForm, $"Really shutdown WSL entirely? This operation can cause unintentional data loss.",
                    mainForm.Text, MessageBoxButtons.YesNo, MessageBoxIcon.Warning,
                    MessageBoxDefaultButton.Button2) != DialogResult.Yes)
                    return;

                var process = WslHelper.CreateShutdownDistroProcess();
                process.Start();
                process.WaitForExit();
                RefreshListView(listView, statusItem, WslHelper.GetDistroList());
            });

            listView.KeyUp += new KeyEventHandler((s, e) =>
            {
                if (e.KeyCode == Keys.F5)
                {
                    RefreshListView(listView, statusItem, WslHelper.GetDistroList());
                    return;
                }
            });

            listView.MouseDown += new MouseEventHandler((s, e) =>
            {
                if (e.Button == MouseButtons.Right)
                {
                    var hitTest = listView.HitTest(e.Location);

                    if (hitTest.Location == ListViewHitTestLocations.None)
                        defaultContextMenuStrip.Show(Cursor.Position);
                    else
                    {
                        pointContextMenuStrip.Show(Cursor.Position);
                        pointContextMenuStrip.Tag = hitTest;
                    }
                }
            });

            listView.ItemActivate += new EventHandler((s, e) =>
            {
                if (listView.SelectedItems.Count != 1)
                    return;

                var targetItem = listView.SelectedItems[0].Tag as DistroInfo;

                if (targetItem == null)
                    return;

                var process = WslHelper.CreateLaunchSpecificDistroProcess(targetItem.DistroName);
                process.Start();
            });

            mainForm.Load += new EventHandler((s, e) =>
            {
                var wslHostPath = Path.Combine(
                    Environment.GetFolderPath(Environment.SpecialFolder.System),
                    "lxss", "wslhost.exe");

                if (!File.Exists(wslHostPath))
                {
                    MessageBox.Show(mainForm, "It looks like WSL does not available on this system. Please install WSL first.",
                        mainForm.Text, MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1);
                    mainForm.Close();
                    return;
                }

                RefreshListView(listView, statusItem, WslHelper.GetDistroList());
            });

            mainForm.Disposed += new EventHandler((s, e) =>
            {
                if (components == null)
                    return;

                components.Dispose();
            });

            return mainForm;
        }

        public static ListViewItem AddDistroInfoIntoListView(
            ListView listView,
            DistroInfo distroInfo)
        {
            var lvItem = new ListViewItem(distroInfo.DistroName) { Tag = distroInfo, ImageKey = "linux", };
            var roughName = distroInfo?.DistroName?.Trim() ?? string.Empty;

            foreach (var eachKey in LogoImages.Keys)
            {
                if (roughName.Contains(eachKey, StringComparison.OrdinalIgnoreCase))
                    lvItem.ImageKey = eachKey;
            }

            if (distroInfo.IsDefault)
                lvItem.StateImageIndex = 0;
            else if (string.Equals(distroInfo.DistroStatus, "Installing", StringComparison.OrdinalIgnoreCase))
                lvItem.StateImageIndex = 1;

            foreach (ColumnHeader eachSubItem in listView.Columns)
            {
                switch (eachSubItem.Name)
                {
                    case "status":
                        lvItem.SubItems.Add(new ListViewItem.ListViewSubItem() { Name = "status", Text = distroInfo.DistroStatus, });
                        break;

                    case "wslver":
                        lvItem.SubItems.Add(new ListViewItem.ListViewSubItem() { Name = "wslver", Text = distroInfo.WSLVersion, });
                        break;

                    case "default":
                        lvItem.SubItems.Add(new ListViewItem.ListViewSubItem() { Name = "default", Text = distroInfo.IsDefault ? "*" : string.Empty, });
                        break;
                }
            }

            listView.Items.Add(lvItem);
            return lvItem;
        }

        public static void RefreshListView(
            ListView listView,
            ToolStripStatusLabel stateLabel,
            DistroInfoList distroInfoList)
        {
            if (listView.InvokeRequired)
            {
                listView.Invoke(
                    new Action<ListView, ToolStripStatusLabel, DistroInfoList>(RefreshListView),
                    listView, stateLabel, distroInfoList);
                return;
            }

            listView.BeginUpdate();
            var selectedDistroName = default(string);

            if (listView.SelectedItems.Count > 0)
                selectedDistroName = (listView.SelectedItems[0]?.Tag as DistroInfo)?.DistroName;

            if (listView.Items.Count > 0)
                listView.Items.Clear();

            foreach (var eachDistro in distroInfoList.DistroList)
            {
                var createdItem = AddDistroInfoIntoListView(listView, eachDistro);

                if (string.Equals(eachDistro.DistroName, selectedDistroName, StringComparison.Ordinal))
                    createdItem.Selected = true;
            }

            stateLabel.Text = $"Total {distroInfoList.DistroList.Count()} distros found. - {DateTime.Now}";
            listView.EndUpdate();
        }

        public static Bitmap ResizeImage(Image image, int width, int height)
        {
            var destRect = new Rectangle(0, 0, width, height);
            var destImage = new Bitmap(width, height);

            destImage.SetResolution(image.HorizontalResolution, image.VerticalResolution);

            using (var graphics = Graphics.FromImage(destImage))
            {
                graphics.CompositingMode = CompositingMode.SourceCopy;
                graphics.CompositingQuality = CompositingQuality.HighQuality;
                graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;
                graphics.SmoothingMode = SmoothingMode.HighQuality;
                graphics.PixelOffsetMode = PixelOffsetMode.HighQuality;

                using (var wrapMode = new ImageAttributes())
                {
                    wrapMode.SetWrapMode(WrapMode.TileFlipXY);
                    graphics.DrawImage(image, destRect, 0, 0, image.Width, image.Height, GraphicsUnit.Pixel, wrapMode);
                }
            }

            return destImage;
        }
    }
}
